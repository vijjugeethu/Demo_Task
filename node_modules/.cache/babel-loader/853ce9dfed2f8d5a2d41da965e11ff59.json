{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\react-Wowcher-Test (1)\\\\react-Wowcher-Test-v2.0\\\\react-Wowcher-Test\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = number => new Intl.NumberFormat(\"en\", {\n  minimumFractionDigits: 2\n}).format(number);\n\nconst urls = ['api/branch1.json', 'api/branch2.json', 'api/branch3.json'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchSpace = event => {\n      let keyword = event.target.value;\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.componentDidMount = () => {\n      Promise.all([fetch('api/branch1.json'), fetch('api/branch2.json'), fetch('api/branch3.json')]).then(function (responses) {\n        // Get a JSON object from each of the responses\n        return Promise.all(responses.map(function (response) {\n          return response.json();\n        }));\n      }).then(data => {\n        // Log the data to the console\n        // You would do something with both sets of data here\n        this.setState({\n          products: data\n        });\n        console.log('products', this.state.products);\n        console.log('data', data);\n      }).catch(function (error) {\n        // if there's an error, log it\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      products: [],\n      sum: [],\n      search: null\n    };\n  }\n\n  render() {\n    const products = this.state;\n    console.log('total', JSON.stringify(products));\n    const ProductTotal = products.products.filter(data => {\n      if (this.state.search == null) return data;else if (data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n        return data;\n      }\n    }).reduce((totalProducts, product) => totalProducts + product.unitPrice, 0);\n    console.log('total', JSON.stringify(ProductTotal)); // const ProductTotal1 = products.products.map(({ products }) => {\n    //   return products.reduce((prev, { unitPrice }) => {\n    //     return +prev['unitPrice'].replace(/,/g, '') +  +unitPrice.replace(/,/g, '');\n    //   });\n    // });\n    // const total = ProductTotal1.reduce((prev, next) => prev + next);\n    // console.log(total);\n\n    const sum = products.products.reduce((acc, course) => {\n      acc[course.branchId] = course.products.reduce((acc, el) => acc + el.unitPrice, 0);\n      return acc;\n    }, {}); // this.setState({ sum: sum});\n\n    console.log(\"Sum****\" + JSON.stringify(sum));\n    const exercises_courses = products.products.map(item => {\n      item.products.reduce((sum, part) => sum + part.unitPrice, 0);\n      return sum;\n    });\n    const sum_all = exercises_courses.reduce((sum, sum_one) => sum + sum_one, 0);\n    var newdata = Object.values(sum);\n    console.log(JSON.stringify(exercises_courses));\n    const latest = newdata.reduce((sum, sum_one) => sum + sum_one, 0);\n    console.log(\"sum all============\" + JSON.stringify(latest)); ///////search/////////////////\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"product-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"Search Products\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.searchSpace(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Revenue\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, products.products.map((item, index) => item.products.map((c, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, c.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, c.unitPrice))))), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, sum_all)))));\n  }\n\n}\n\nexport default App; // {\n//   this.state.todos && \n//   Object.keys(icon).map(function (element) {\n//      return <tr>\n//        <td>{element}</td>\n//        <td>{icon[element]}</td>\n//      </tr>;\n//     })\n// }\n/////////////\n// {products.products.map(image => <div>{image.name}</div>)}\n//    {\n//     products.products.filter((data)=>{\n//       if(this.state.search == null)\n//         return data\n//       else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n//         return data\n// }\n// }).map(function (element) {\n//        return <tr>\n//          <td>{element.name}</td>\n//          <td>{element.unitPrice}</td>\n//        </tr>;\n//       })\n//   }","map":{"version":3,"sources":["C:/Users/User/Downloads/react-Wowcher-Test (1)/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js"],"names":["React","Component","axios","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","urls","App","constructor","props","searchSpace","event","keyword","target","value","setState","search","componentDidMount","Promise","all","fetch","then","responses","map","response","json","data","products","console","log","state","catch","error","sum","render","JSON","stringify","ProductTotal","filter","name","toLowerCase","includes","reduce","totalProducts","product","unitPrice","acc","course","branchId","el","exercises_courses","item","part","sum_all","sum_one","newdata","Object","values","latest","e","index","c","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = (number) => new Intl.NumberFormat(\"en\", { minimumFractionDigits: 2 }).format(number);\nconst urls = [\n  'api/branch1.json',\n  'api/branch2.json',\n  'api/branch3.json'\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      products: [],\n      sum: [],\n      search:null\n    };  \n  }\n\n  searchSpace=(event)=>{\n    let keyword = event.target.value;\n    this.setState({search:keyword})\n  }\n\n  componentDidMount = () => {\n    Promise.all([\n      fetch('api/branch1.json'),\n      fetch('api/branch2.json'),\n      fetch('api/branch3.json')\n    ]).then(function (responses) {\n      // Get a JSON object from each of the responses\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(data => {\n      // Log the data to the console\n      // You would do something with both sets of data here\n      this.setState({ products: data });\n      console.log('products',this.state.products)\n      console.log('data',data);\n    }).catch(function (error) {\n      // if there's an error, log it\n      console.log(error);\n    });\n\n\n  }\n  \n  render() {\n    const products = this.state\n    console.log('total',JSON.stringify(products))\n    \n    const ProductTotal = products.products.filter((data)=>{\n              if(this.state.search == null)\n                return data\n              else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n                return data\n        }\n        }).reduce((totalProducts, product) => totalProducts + product.unitPrice, 0);\n    console.log('total',JSON.stringify(ProductTotal))\n\n    // const ProductTotal1 = products.products.map(({ products }) => {\n    //   return products.reduce((prev, { unitPrice }) => {\n    //     return +prev['unitPrice'].replace(/,/g, '') +  +unitPrice.replace(/,/g, '');\n    //   });\n    // });\n\n    // const total = ProductTotal1.reduce((prev, next) => prev + next);\n\n    // console.log(total);\n    const sum = products.products.reduce((acc, course) => {\n      acc[course.branchId] = course.products.reduce((acc, el) => acc + el.unitPrice, 0);\n      return acc;\n\n    }, {});\n    // this.setState({ sum: sum});\n    console.log(\"Sum****\"+JSON.stringify(sum));\n    const exercises_courses = products.products.map(item => {\n      item.products.reduce((sum, part) => sum + part.unitPrice, 0);\n      return sum;\n    })\n    const sum_all = exercises_courses.reduce((sum, sum_one) => sum + sum_one, 0);\n\n    var newdata = Object.values(sum);\n    console.log(JSON.stringify(exercises_courses));\n\n    const latest = newdata.reduce((sum, sum_one) => sum + sum_one, 0);\n    console.log(\"sum all============\"+JSON.stringify(latest));\n    ///////search/////////////////\n\n    \n\n    return (\n      <div class=\"product-list\">\n        <label>Search Products</label>\n        <input type=\"text\" onChange={(e)=>this.searchSpace(e)}/>\n        \n        <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Revenue</th>\n          </tr>\n        </thead>\n        <tbody>\n         \n          {products.products.map((item, index) => (\n            \n              item.products.map((c, i) => (\n                <tr key={i}>\n                  <td>{c.name}</td>\n                  <td>{c.unitPrice}</td>\n                \n                </tr>\n              ))\n           \n          ))}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>Total</td>\n            <td>{sum_all}</td>\n          </tr>\n        </tfoot>\n      </table>\n      \n    </div>\n    \n  );\n  }\n}\n\nexport default App;\n\n // {\n          //   this.state.todos && \n          //   Object.keys(icon).map(function (element) {\n          //      return <tr>\n          //        <td>{element}</td>\n          //        <td>{icon[element]}</td>\n          //      </tr>;\n          //     })\n          // }\n          /////////////\n           // {products.products.map(image => <div>{image.name}</div>)}\n\n        //    {\n        //     products.products.filter((data)=>{\n        //       if(this.state.search == null)\n        //         return data\n        //       else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n        //         return data\n        // }\n        // }).map(function (element) {\n        //        return <tr>\n        //          <td>{element.name}</td>\n        //          <td>{element.unitPrice}</td>\n        //        </tr>;\n        //       })\n        //   }"]},"metadata":{},"sourceType":"module"}